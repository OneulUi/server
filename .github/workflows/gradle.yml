name: Backend CD
on:
  push:
    branches: ["master", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 개발환경 프로퍼티
      - name: make application-dev.yml
        if: contains(github.ref, 'develop')
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.YML_DEV }}" > ./application-dev.yml
        shell: bash

      # 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: Docker build & push to prod
        if: contains(github.ref, 'master')
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -f Dockerfile-prod -t ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server

      - name: Docker build & push to develop
        if: contains(github.ref, 'develop')
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -f Dockerfile-dev -t ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server

      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: contains(github.ref, 'master')
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker ps
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_PASSWORD }}/oneul-server
            sudo docker image prune -f

      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        if: contains(github.ref, 'develop')
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server
            docker stop $(docker ps -a -q) 
            docker rm $(docker ps -a -q) 
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server
            docker image prune -f
