name: Backend CD
on:
  push:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: Docker build & push to prod
        if: contains(github.ref, 'master')
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server

      - name: Docker build & push to dev
        if: contains(github.ref, 'dev')
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oneul-server

      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: contains(github.ref, 'master')
        with:
          host: ${{ secrets.HOST_DEV }} // 운영서버 배포시 변경 필요
          username: ubuntu
          key: ${{ secrets.EC2_KEY }} // ec2 key
          envs: GITHUB_SHA
          script: |
            sudo docker ps
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/oneul-server
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/oneul-server
            sudo docker image prune -f

      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        if: contains(github.ref, 'develop')
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/oneul-server
            docker stop $(docker ps -a -q) 
            docker rm $(docker ps -a -q) 
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/oneul-server
            docker image prune -f
